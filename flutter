[INFO] Generating build script...
[INFO] Generating build script completed, took 404ms

[WARNING] Deleted previous snapshot due to missing asset graph.
[INFO] Creating build script snapshot......
[INFO] Creating build script snapshot... completed, took 19.5s

Only top level directories such as `web` or `test` are allowed as positional args, but got `F:\git\vikram0230\OpenScan`

Builds the specified targets, watching the file system for updates and
rebuilding as appropriate.

Usage: build_runner watch [arguments] [directories]
-h, --help                          Print this usage information.
    --delete-conflicting-outputs    By default, the user will be prompted to
                                    delete any files which already exist but
                                    were not known to be generated by this
                                    specific build script.
                                    
                                    Enabling this option skips the prompt and
                                    deletes the files. This should typically be
                                    used in continues integration servers and
                                    tests, but not otherwise.
    --low-resources-mode            Reduce the amount of memory consumed by the
                                    build process. This will slow down builds
                                    but allow them to progress in resource
                                    constrained environments.
-c, --config                        Read `build.<name>.yaml` instead of the
                                    default `build.yaml`
    --[no-]track-performance        Enables performance tracking and the /$perf
                                    page.
    --log-performance               A directory to write performance logs to,
                                    must be in the current package. Implies
                                    `--track-performance`.
-o, --output                        A directory to copy the fully built package
                                    to. Or a mapping from a top-level directory
                                    in the package to the directory to write a
                                    filtered build output to. For example
                                    "web:deploy".
-v, --verbose                       Enables verbose logging.
-r, --[no-]release                  Build with release mode defaults for
                                    builders.
    --define                        Sets the global `options` config for a
                                    builder by key.
    --[no-]symlink                  Symlink files in the output directories,
                                    instead of copying.
    --build-filter                  An explicit filter of files to build.
                                    Relative paths and `package:` uris are
                                    supported, including glob syntax for paths
                                    portions (but not package names).
                                    
                                    If multiple filters are applied then outputs
                                    matching any filter will be built (they do
                                    not need to match all filters).
    --[no-]use-polling-watcher      Use a polling watcher instead of the current
                                    platforms default watcher implementation.
                                    This should generally only be used if you
                                    are having problems with the default
                                    watcher, as it is generally less efficient.

Run "build_runner help" to see global options.
